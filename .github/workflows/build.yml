name: NWNX4
on: [push, pull_request]

env:
  nwnlibd_version: v1.0.2

jobs:

  # --------------------------------------------------

  build:
    name: Build
    runs-on: windows-latest
    env:
      VCPKG_BINARY_SOURCES: 'clear;nuget,GitHub,readwrite'
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive

      # Setup MSVC
      - name: Preparing msvc tools
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x86
          # toolset: 14.XX

      # Install python & meson
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install Python Dependencies
        run: pip install meson ninja

      - name: Restore cached VCPKG dependencies
        id: vcpkg_cache
        uses: actions/cache@v2
        with:
          path: vcpkg_installed/
          key: "vcpkg.json-${{ hashFiles('vcpkg.json') }}"

      - name: ↳ Setup VCPKG
        if: steps.vcpkg_cache.outputs.cache-hit != 'true'
        uses: lukka/run-vcpkg@v7
        with:
          setupOnly: true
          doNotCache: true
          vcpkgArguments: "--triplet=x86-windows-static-md --disable-metrics --clean-after-build"

      - name: ↳ Setup NuGet cache for vcpkg'
        if: steps.vcpkg_cache.outputs.cache-hit != 'true'
        shell: 'bash'
        run: |
          $(./vcpkg/vcpkg fetch nuget | tail -n 1) \
            sources add \
            -source "https://nuget.pkg.github.com/nwn2dev/index.json" \
            -storepasswordincleartext \
            -name "GitHub" \
            -username "${{ github.actor }}" \
            -password "${{ secrets.GITHUB_TOKEN }}"

      # Build vcpkg dependencies
      - name: ↳ Build & install dependencies
        if: steps.vcpkg_cache.outputs.cache-hit != 'true'
        timeout-minutes: 120
        shell: bash
        run: |
          vcpkg/vcpkg.exe install --triplet=x86-windows-static-md --disable-metrics --clean-after-build

      - name: Meson Configure
        run: |
          meson setup builddir --backend=vs --buildtype=release

      - name: Meson build
        run: |
          cd builddir
          meson compile

      - name: Meson install
        shell: bash
        run: |
          cd builddir
          meson install --destdir=$PWD/../nwnx4

      # Download / restore nwn-lib-d tools
      - name: Restore cached nwn-lib-d-tools
        id: nwnlibd_cache
        uses: actions/cache@v2
        with:
          path: C:/nwn-lib-d-tools/
          key: "nwn-lib-d-tools-${{env.nwnlibd_version}}"

      - name: Install nwn-lib-d-tools if not cached
        if: steps.nwnlibd_cache.outputs.cache-hit != 'true'
        shell: bash
        run: |
          curl -L 'https://github.com/CromFr/nwn-lib-d/releases/download/${{env.nwnlibd_version}}/nwn-lib-d-tools-windows-x86_64.zip' -o /tmp/nwn-lib-d-tools.zip
          unzip -d /c/ /tmp/nwn-lib-d-tools.zip
          rm /tmp/nwn-lib-d-tools.zip

      - name: Package nwnx4
        shell: bash
        run: |
          rm nwnx4/*.lib
          /c/nwn-lib-d-tools/nwn-erf create -o nwnx4/nwscript/nwnx.erf nwnx4/nwscript/

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          path: nwnx4/
          name: nwnx4-${{ github.sha }}

  # --------------------------------------------------
