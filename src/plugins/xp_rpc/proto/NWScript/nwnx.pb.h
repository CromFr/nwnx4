// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: NWScript/nwnx.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_NWScript_2fnwnx_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_NWScript_2fnwnx_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015008 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "NWScript/types.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_NWScript_2fnwnx_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_NWScript_2fnwnx_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[6]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_NWScript_2fnwnx_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_NWScript_2fnwnx_2eproto_metadata_getter(int index);
namespace NWNX4 {
namespace HookHorror {
namespace Proto {
namespace NWScript {
class NWNXGetFloatRequest;
struct NWNXGetFloatRequestDefaultTypeInternal;
extern NWNXGetFloatRequestDefaultTypeInternal _NWNXGetFloatRequest_default_instance_;
class NWNXGetIntRequest;
struct NWNXGetIntRequestDefaultTypeInternal;
extern NWNXGetIntRequestDefaultTypeInternal _NWNXGetIntRequest_default_instance_;
class NWNXGetStringRequest;
struct NWNXGetStringRequestDefaultTypeInternal;
extern NWNXGetStringRequestDefaultTypeInternal _NWNXGetStringRequest_default_instance_;
class NWNXSetFloatRequest;
struct NWNXSetFloatRequestDefaultTypeInternal;
extern NWNXSetFloatRequestDefaultTypeInternal _NWNXSetFloatRequest_default_instance_;
class NWNXSetIntRequest;
struct NWNXSetIntRequestDefaultTypeInternal;
extern NWNXSetIntRequestDefaultTypeInternal _NWNXSetIntRequest_default_instance_;
class NWNXSetStringRequest;
struct NWNXSetStringRequestDefaultTypeInternal;
extern NWNXSetStringRequestDefaultTypeInternal _NWNXSetStringRequest_default_instance_;
}  // namespace NWScript
}  // namespace Proto
}  // namespace HookHorror
}  // namespace NWNX4
PROTOBUF_NAMESPACE_OPEN
template<> ::NWNX4::HookHorror::Proto::NWScript::NWNXGetFloatRequest* Arena::CreateMaybeMessage<::NWNX4::HookHorror::Proto::NWScript::NWNXGetFloatRequest>(Arena*);
template<> ::NWNX4::HookHorror::Proto::NWScript::NWNXGetIntRequest* Arena::CreateMaybeMessage<::NWNX4::HookHorror::Proto::NWScript::NWNXGetIntRequest>(Arena*);
template<> ::NWNX4::HookHorror::Proto::NWScript::NWNXGetStringRequest* Arena::CreateMaybeMessage<::NWNX4::HookHorror::Proto::NWScript::NWNXGetStringRequest>(Arena*);
template<> ::NWNX4::HookHorror::Proto::NWScript::NWNXSetFloatRequest* Arena::CreateMaybeMessage<::NWNX4::HookHorror::Proto::NWScript::NWNXSetFloatRequest>(Arena*);
template<> ::NWNX4::HookHorror::Proto::NWScript::NWNXSetIntRequest* Arena::CreateMaybeMessage<::NWNX4::HookHorror::Proto::NWScript::NWNXSetIntRequest>(Arena*);
template<> ::NWNX4::HookHorror::Proto::NWScript::NWNXSetStringRequest* Arena::CreateMaybeMessage<::NWNX4::HookHorror::Proto::NWScript::NWNXSetStringRequest>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace NWNX4 {
namespace HookHorror {
namespace Proto {
namespace NWScript {

// ===================================================================

class NWNXGetIntRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:NWNX4.HookHorror.Proto.NWScript.NWNXGetIntRequest) */ {
 public:
  inline NWNXGetIntRequest() : NWNXGetIntRequest(nullptr) {}
  virtual ~NWNXGetIntRequest();
  explicit constexpr NWNXGetIntRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  NWNXGetIntRequest(const NWNXGetIntRequest& from);
  NWNXGetIntRequest(NWNXGetIntRequest&& from) noexcept
    : NWNXGetIntRequest() {
    *this = ::std::move(from);
  }

  inline NWNXGetIntRequest& operator=(const NWNXGetIntRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline NWNXGetIntRequest& operator=(NWNXGetIntRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const NWNXGetIntRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const NWNXGetIntRequest* internal_default_instance() {
    return reinterpret_cast<const NWNXGetIntRequest*>(
               &_NWNXGetIntRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(NWNXGetIntRequest& a, NWNXGetIntRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(NWNXGetIntRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NWNXGetIntRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline NWNXGetIntRequest* New() const final {
    return CreateMaybeMessage<NWNXGetIntRequest>(nullptr);
  }

  NWNXGetIntRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<NWNXGetIntRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const NWNXGetIntRequest& from);
  void MergeFrom(const NWNXGetIntRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NWNXGetIntRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "NWNX4.HookHorror.Proto.NWScript.NWNXGetIntRequest";
  }
  protected:
  explicit NWNXGetIntRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_NWScript_2fnwnx_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSFunctionFieldNumber = 1,
    kSParam1FieldNumber = 2,
    kNParam2FieldNumber = 3,
  };
  // string sFunction = 1;
  void clear_sfunction();
  const std::string& sfunction() const;
  void set_sfunction(const std::string& value);
  void set_sfunction(std::string&& value);
  void set_sfunction(const char* value);
  void set_sfunction(const char* value, size_t size);
  std::string* mutable_sfunction();
  std::string* release_sfunction();
  void set_allocated_sfunction(std::string* sfunction);
  private:
  const std::string& _internal_sfunction() const;
  void _internal_set_sfunction(const std::string& value);
  std::string* _internal_mutable_sfunction();
  public:

  // string sParam1 = 2;
  void clear_sparam1();
  const std::string& sparam1() const;
  void set_sparam1(const std::string& value);
  void set_sparam1(std::string&& value);
  void set_sparam1(const char* value);
  void set_sparam1(const char* value, size_t size);
  std::string* mutable_sparam1();
  std::string* release_sparam1();
  void set_allocated_sparam1(std::string* sparam1);
  private:
  const std::string& _internal_sparam1() const;
  void _internal_set_sparam1(const std::string& value);
  std::string* _internal_mutable_sparam1();
  public:

  // int32 nParam2 = 3;
  void clear_nparam2();
  ::PROTOBUF_NAMESPACE_ID::int32 nparam2() const;
  void set_nparam2(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_nparam2() const;
  void _internal_set_nparam2(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:NWNX4.HookHorror.Proto.NWScript.NWNXGetIntRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sfunction_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sparam1_;
  ::PROTOBUF_NAMESPACE_ID::int32 nparam2_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_NWScript_2fnwnx_2eproto;
};
// -------------------------------------------------------------------

class NWNXSetIntRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:NWNX4.HookHorror.Proto.NWScript.NWNXSetIntRequest) */ {
 public:
  inline NWNXSetIntRequest() : NWNXSetIntRequest(nullptr) {}
  virtual ~NWNXSetIntRequest();
  explicit constexpr NWNXSetIntRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  NWNXSetIntRequest(const NWNXSetIntRequest& from);
  NWNXSetIntRequest(NWNXSetIntRequest&& from) noexcept
    : NWNXSetIntRequest() {
    *this = ::std::move(from);
  }

  inline NWNXSetIntRequest& operator=(const NWNXSetIntRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline NWNXSetIntRequest& operator=(NWNXSetIntRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const NWNXSetIntRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const NWNXSetIntRequest* internal_default_instance() {
    return reinterpret_cast<const NWNXSetIntRequest*>(
               &_NWNXSetIntRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(NWNXSetIntRequest& a, NWNXSetIntRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(NWNXSetIntRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NWNXSetIntRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline NWNXSetIntRequest* New() const final {
    return CreateMaybeMessage<NWNXSetIntRequest>(nullptr);
  }

  NWNXSetIntRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<NWNXSetIntRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const NWNXSetIntRequest& from);
  void MergeFrom(const NWNXSetIntRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NWNXSetIntRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "NWNX4.HookHorror.Proto.NWScript.NWNXSetIntRequest";
  }
  protected:
  explicit NWNXSetIntRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_NWScript_2fnwnx_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSFunctionFieldNumber = 1,
    kSParam1FieldNumber = 2,
    kNParam2FieldNumber = 3,
    kNValueFieldNumber = 4,
  };
  // string sFunction = 1;
  void clear_sfunction();
  const std::string& sfunction() const;
  void set_sfunction(const std::string& value);
  void set_sfunction(std::string&& value);
  void set_sfunction(const char* value);
  void set_sfunction(const char* value, size_t size);
  std::string* mutable_sfunction();
  std::string* release_sfunction();
  void set_allocated_sfunction(std::string* sfunction);
  private:
  const std::string& _internal_sfunction() const;
  void _internal_set_sfunction(const std::string& value);
  std::string* _internal_mutable_sfunction();
  public:

  // string sParam1 = 2;
  void clear_sparam1();
  const std::string& sparam1() const;
  void set_sparam1(const std::string& value);
  void set_sparam1(std::string&& value);
  void set_sparam1(const char* value);
  void set_sparam1(const char* value, size_t size);
  std::string* mutable_sparam1();
  std::string* release_sparam1();
  void set_allocated_sparam1(std::string* sparam1);
  private:
  const std::string& _internal_sparam1() const;
  void _internal_set_sparam1(const std::string& value);
  std::string* _internal_mutable_sparam1();
  public:

  // int32 nParam2 = 3;
  void clear_nparam2();
  ::PROTOBUF_NAMESPACE_ID::int32 nparam2() const;
  void set_nparam2(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_nparam2() const;
  void _internal_set_nparam2(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 nValue = 4;
  void clear_nvalue();
  ::PROTOBUF_NAMESPACE_ID::int32 nvalue() const;
  void set_nvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_nvalue() const;
  void _internal_set_nvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:NWNX4.HookHorror.Proto.NWScript.NWNXSetIntRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sfunction_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sparam1_;
  ::PROTOBUF_NAMESPACE_ID::int32 nparam2_;
  ::PROTOBUF_NAMESPACE_ID::int32 nvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_NWScript_2fnwnx_2eproto;
};
// -------------------------------------------------------------------

class NWNXGetFloatRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:NWNX4.HookHorror.Proto.NWScript.NWNXGetFloatRequest) */ {
 public:
  inline NWNXGetFloatRequest() : NWNXGetFloatRequest(nullptr) {}
  virtual ~NWNXGetFloatRequest();
  explicit constexpr NWNXGetFloatRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  NWNXGetFloatRequest(const NWNXGetFloatRequest& from);
  NWNXGetFloatRequest(NWNXGetFloatRequest&& from) noexcept
    : NWNXGetFloatRequest() {
    *this = ::std::move(from);
  }

  inline NWNXGetFloatRequest& operator=(const NWNXGetFloatRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline NWNXGetFloatRequest& operator=(NWNXGetFloatRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const NWNXGetFloatRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const NWNXGetFloatRequest* internal_default_instance() {
    return reinterpret_cast<const NWNXGetFloatRequest*>(
               &_NWNXGetFloatRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(NWNXGetFloatRequest& a, NWNXGetFloatRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(NWNXGetFloatRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NWNXGetFloatRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline NWNXGetFloatRequest* New() const final {
    return CreateMaybeMessage<NWNXGetFloatRequest>(nullptr);
  }

  NWNXGetFloatRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<NWNXGetFloatRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const NWNXGetFloatRequest& from);
  void MergeFrom(const NWNXGetFloatRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NWNXGetFloatRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "NWNX4.HookHorror.Proto.NWScript.NWNXGetFloatRequest";
  }
  protected:
  explicit NWNXGetFloatRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_NWScript_2fnwnx_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSFunctionFieldNumber = 1,
    kSParam1FieldNumber = 2,
    kNParam2FieldNumber = 3,
  };
  // string sFunction = 1;
  void clear_sfunction();
  const std::string& sfunction() const;
  void set_sfunction(const std::string& value);
  void set_sfunction(std::string&& value);
  void set_sfunction(const char* value);
  void set_sfunction(const char* value, size_t size);
  std::string* mutable_sfunction();
  std::string* release_sfunction();
  void set_allocated_sfunction(std::string* sfunction);
  private:
  const std::string& _internal_sfunction() const;
  void _internal_set_sfunction(const std::string& value);
  std::string* _internal_mutable_sfunction();
  public:

  // string sParam1 = 2;
  void clear_sparam1();
  const std::string& sparam1() const;
  void set_sparam1(const std::string& value);
  void set_sparam1(std::string&& value);
  void set_sparam1(const char* value);
  void set_sparam1(const char* value, size_t size);
  std::string* mutable_sparam1();
  std::string* release_sparam1();
  void set_allocated_sparam1(std::string* sparam1);
  private:
  const std::string& _internal_sparam1() const;
  void _internal_set_sparam1(const std::string& value);
  std::string* _internal_mutable_sparam1();
  public:

  // int32 nParam2 = 3;
  void clear_nparam2();
  ::PROTOBUF_NAMESPACE_ID::int32 nparam2() const;
  void set_nparam2(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_nparam2() const;
  void _internal_set_nparam2(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:NWNX4.HookHorror.Proto.NWScript.NWNXGetFloatRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sfunction_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sparam1_;
  ::PROTOBUF_NAMESPACE_ID::int32 nparam2_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_NWScript_2fnwnx_2eproto;
};
// -------------------------------------------------------------------

class NWNXSetFloatRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:NWNX4.HookHorror.Proto.NWScript.NWNXSetFloatRequest) */ {
 public:
  inline NWNXSetFloatRequest() : NWNXSetFloatRequest(nullptr) {}
  virtual ~NWNXSetFloatRequest();
  explicit constexpr NWNXSetFloatRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  NWNXSetFloatRequest(const NWNXSetFloatRequest& from);
  NWNXSetFloatRequest(NWNXSetFloatRequest&& from) noexcept
    : NWNXSetFloatRequest() {
    *this = ::std::move(from);
  }

  inline NWNXSetFloatRequest& operator=(const NWNXSetFloatRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline NWNXSetFloatRequest& operator=(NWNXSetFloatRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const NWNXSetFloatRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const NWNXSetFloatRequest* internal_default_instance() {
    return reinterpret_cast<const NWNXSetFloatRequest*>(
               &_NWNXSetFloatRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(NWNXSetFloatRequest& a, NWNXSetFloatRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(NWNXSetFloatRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NWNXSetFloatRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline NWNXSetFloatRequest* New() const final {
    return CreateMaybeMessage<NWNXSetFloatRequest>(nullptr);
  }

  NWNXSetFloatRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<NWNXSetFloatRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const NWNXSetFloatRequest& from);
  void MergeFrom(const NWNXSetFloatRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NWNXSetFloatRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "NWNX4.HookHorror.Proto.NWScript.NWNXSetFloatRequest";
  }
  protected:
  explicit NWNXSetFloatRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_NWScript_2fnwnx_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSFunctionFieldNumber = 1,
    kSParam1FieldNumber = 2,
    kNParam2FieldNumber = 3,
    kFValueFieldNumber = 4,
  };
  // string sFunction = 1;
  void clear_sfunction();
  const std::string& sfunction() const;
  void set_sfunction(const std::string& value);
  void set_sfunction(std::string&& value);
  void set_sfunction(const char* value);
  void set_sfunction(const char* value, size_t size);
  std::string* mutable_sfunction();
  std::string* release_sfunction();
  void set_allocated_sfunction(std::string* sfunction);
  private:
  const std::string& _internal_sfunction() const;
  void _internal_set_sfunction(const std::string& value);
  std::string* _internal_mutable_sfunction();
  public:

  // string sParam1 = 2;
  void clear_sparam1();
  const std::string& sparam1() const;
  void set_sparam1(const std::string& value);
  void set_sparam1(std::string&& value);
  void set_sparam1(const char* value);
  void set_sparam1(const char* value, size_t size);
  std::string* mutable_sparam1();
  std::string* release_sparam1();
  void set_allocated_sparam1(std::string* sparam1);
  private:
  const std::string& _internal_sparam1() const;
  void _internal_set_sparam1(const std::string& value);
  std::string* _internal_mutable_sparam1();
  public:

  // int32 nParam2 = 3;
  void clear_nparam2();
  ::PROTOBUF_NAMESPACE_ID::int32 nparam2() const;
  void set_nparam2(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_nparam2() const;
  void _internal_set_nparam2(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // float fValue = 4;
  void clear_fvalue();
  float fvalue() const;
  void set_fvalue(float value);
  private:
  float _internal_fvalue() const;
  void _internal_set_fvalue(float value);
  public:

  // @@protoc_insertion_point(class_scope:NWNX4.HookHorror.Proto.NWScript.NWNXSetFloatRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sfunction_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sparam1_;
  ::PROTOBUF_NAMESPACE_ID::int32 nparam2_;
  float fvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_NWScript_2fnwnx_2eproto;
};
// -------------------------------------------------------------------

class NWNXGetStringRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:NWNX4.HookHorror.Proto.NWScript.NWNXGetStringRequest) */ {
 public:
  inline NWNXGetStringRequest() : NWNXGetStringRequest(nullptr) {}
  virtual ~NWNXGetStringRequest();
  explicit constexpr NWNXGetStringRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  NWNXGetStringRequest(const NWNXGetStringRequest& from);
  NWNXGetStringRequest(NWNXGetStringRequest&& from) noexcept
    : NWNXGetStringRequest() {
    *this = ::std::move(from);
  }

  inline NWNXGetStringRequest& operator=(const NWNXGetStringRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline NWNXGetStringRequest& operator=(NWNXGetStringRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const NWNXGetStringRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const NWNXGetStringRequest* internal_default_instance() {
    return reinterpret_cast<const NWNXGetStringRequest*>(
               &_NWNXGetStringRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(NWNXGetStringRequest& a, NWNXGetStringRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(NWNXGetStringRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NWNXGetStringRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline NWNXGetStringRequest* New() const final {
    return CreateMaybeMessage<NWNXGetStringRequest>(nullptr);
  }

  NWNXGetStringRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<NWNXGetStringRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const NWNXGetStringRequest& from);
  void MergeFrom(const NWNXGetStringRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NWNXGetStringRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "NWNX4.HookHorror.Proto.NWScript.NWNXGetStringRequest";
  }
  protected:
  explicit NWNXGetStringRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_NWScript_2fnwnx_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSFunctionFieldNumber = 1,
    kSParam1FieldNumber = 2,
    kNParam2FieldNumber = 3,
  };
  // string sFunction = 1;
  void clear_sfunction();
  const std::string& sfunction() const;
  void set_sfunction(const std::string& value);
  void set_sfunction(std::string&& value);
  void set_sfunction(const char* value);
  void set_sfunction(const char* value, size_t size);
  std::string* mutable_sfunction();
  std::string* release_sfunction();
  void set_allocated_sfunction(std::string* sfunction);
  private:
  const std::string& _internal_sfunction() const;
  void _internal_set_sfunction(const std::string& value);
  std::string* _internal_mutable_sfunction();
  public:

  // string sParam1 = 2;
  void clear_sparam1();
  const std::string& sparam1() const;
  void set_sparam1(const std::string& value);
  void set_sparam1(std::string&& value);
  void set_sparam1(const char* value);
  void set_sparam1(const char* value, size_t size);
  std::string* mutable_sparam1();
  std::string* release_sparam1();
  void set_allocated_sparam1(std::string* sparam1);
  private:
  const std::string& _internal_sparam1() const;
  void _internal_set_sparam1(const std::string& value);
  std::string* _internal_mutable_sparam1();
  public:

  // int32 nParam2 = 3;
  void clear_nparam2();
  ::PROTOBUF_NAMESPACE_ID::int32 nparam2() const;
  void set_nparam2(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_nparam2() const;
  void _internal_set_nparam2(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:NWNX4.HookHorror.Proto.NWScript.NWNXGetStringRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sfunction_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sparam1_;
  ::PROTOBUF_NAMESPACE_ID::int32 nparam2_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_NWScript_2fnwnx_2eproto;
};
// -------------------------------------------------------------------

class NWNXSetStringRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:NWNX4.HookHorror.Proto.NWScript.NWNXSetStringRequest) */ {
 public:
  inline NWNXSetStringRequest() : NWNXSetStringRequest(nullptr) {}
  virtual ~NWNXSetStringRequest();
  explicit constexpr NWNXSetStringRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  NWNXSetStringRequest(const NWNXSetStringRequest& from);
  NWNXSetStringRequest(NWNXSetStringRequest&& from) noexcept
    : NWNXSetStringRequest() {
    *this = ::std::move(from);
  }

  inline NWNXSetStringRequest& operator=(const NWNXSetStringRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline NWNXSetStringRequest& operator=(NWNXSetStringRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const NWNXSetStringRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const NWNXSetStringRequest* internal_default_instance() {
    return reinterpret_cast<const NWNXSetStringRequest*>(
               &_NWNXSetStringRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(NWNXSetStringRequest& a, NWNXSetStringRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(NWNXSetStringRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NWNXSetStringRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline NWNXSetStringRequest* New() const final {
    return CreateMaybeMessage<NWNXSetStringRequest>(nullptr);
  }

  NWNXSetStringRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<NWNXSetStringRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const NWNXSetStringRequest& from);
  void MergeFrom(const NWNXSetStringRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NWNXSetStringRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "NWNX4.HookHorror.Proto.NWScript.NWNXSetStringRequest";
  }
  protected:
  explicit NWNXSetStringRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_NWScript_2fnwnx_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSFunctionFieldNumber = 1,
    kSParam1FieldNumber = 2,
    kSValueFieldNumber = 4,
    kNParam2FieldNumber = 3,
  };
  // string sFunction = 1;
  void clear_sfunction();
  const std::string& sfunction() const;
  void set_sfunction(const std::string& value);
  void set_sfunction(std::string&& value);
  void set_sfunction(const char* value);
  void set_sfunction(const char* value, size_t size);
  std::string* mutable_sfunction();
  std::string* release_sfunction();
  void set_allocated_sfunction(std::string* sfunction);
  private:
  const std::string& _internal_sfunction() const;
  void _internal_set_sfunction(const std::string& value);
  std::string* _internal_mutable_sfunction();
  public:

  // string sParam1 = 2;
  void clear_sparam1();
  const std::string& sparam1() const;
  void set_sparam1(const std::string& value);
  void set_sparam1(std::string&& value);
  void set_sparam1(const char* value);
  void set_sparam1(const char* value, size_t size);
  std::string* mutable_sparam1();
  std::string* release_sparam1();
  void set_allocated_sparam1(std::string* sparam1);
  private:
  const std::string& _internal_sparam1() const;
  void _internal_set_sparam1(const std::string& value);
  std::string* _internal_mutable_sparam1();
  public:

  // string sValue = 4;
  void clear_svalue();
  const std::string& svalue() const;
  void set_svalue(const std::string& value);
  void set_svalue(std::string&& value);
  void set_svalue(const char* value);
  void set_svalue(const char* value, size_t size);
  std::string* mutable_svalue();
  std::string* release_svalue();
  void set_allocated_svalue(std::string* svalue);
  private:
  const std::string& _internal_svalue() const;
  void _internal_set_svalue(const std::string& value);
  std::string* _internal_mutable_svalue();
  public:

  // int32 nParam2 = 3;
  void clear_nparam2();
  ::PROTOBUF_NAMESPACE_ID::int32 nparam2() const;
  void set_nparam2(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_nparam2() const;
  void _internal_set_nparam2(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:NWNX4.HookHorror.Proto.NWScript.NWNXSetStringRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sfunction_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sparam1_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr svalue_;
  ::PROTOBUF_NAMESPACE_ID::int32 nparam2_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_NWScript_2fnwnx_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// NWNXGetIntRequest

// string sFunction = 1;
inline void NWNXGetIntRequest::clear_sfunction() {
  sfunction_.ClearToEmpty();
}
inline const std::string& NWNXGetIntRequest::sfunction() const {
  // @@protoc_insertion_point(field_get:NWNX4.HookHorror.Proto.NWScript.NWNXGetIntRequest.sFunction)
  return _internal_sfunction();
}
inline void NWNXGetIntRequest::set_sfunction(const std::string& value) {
  _internal_set_sfunction(value);
  // @@protoc_insertion_point(field_set:NWNX4.HookHorror.Proto.NWScript.NWNXGetIntRequest.sFunction)
}
inline std::string* NWNXGetIntRequest::mutable_sfunction() {
  // @@protoc_insertion_point(field_mutable:NWNX4.HookHorror.Proto.NWScript.NWNXGetIntRequest.sFunction)
  return _internal_mutable_sfunction();
}
inline const std::string& NWNXGetIntRequest::_internal_sfunction() const {
  return sfunction_.Get();
}
inline void NWNXGetIntRequest::_internal_set_sfunction(const std::string& value) {
  
  sfunction_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void NWNXGetIntRequest::set_sfunction(std::string&& value) {
  
  sfunction_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:NWNX4.HookHorror.Proto.NWScript.NWNXGetIntRequest.sFunction)
}
inline void NWNXGetIntRequest::set_sfunction(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  sfunction_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:NWNX4.HookHorror.Proto.NWScript.NWNXGetIntRequest.sFunction)
}
inline void NWNXGetIntRequest::set_sfunction(const char* value,
    size_t size) {
  
  sfunction_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:NWNX4.HookHorror.Proto.NWScript.NWNXGetIntRequest.sFunction)
}
inline std::string* NWNXGetIntRequest::_internal_mutable_sfunction() {
  
  return sfunction_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* NWNXGetIntRequest::release_sfunction() {
  // @@protoc_insertion_point(field_release:NWNX4.HookHorror.Proto.NWScript.NWNXGetIntRequest.sFunction)
  return sfunction_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void NWNXGetIntRequest::set_allocated_sfunction(std::string* sfunction) {
  if (sfunction != nullptr) {
    
  } else {
    
  }
  sfunction_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), sfunction,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:NWNX4.HookHorror.Proto.NWScript.NWNXGetIntRequest.sFunction)
}

// string sParam1 = 2;
inline void NWNXGetIntRequest::clear_sparam1() {
  sparam1_.ClearToEmpty();
}
inline const std::string& NWNXGetIntRequest::sparam1() const {
  // @@protoc_insertion_point(field_get:NWNX4.HookHorror.Proto.NWScript.NWNXGetIntRequest.sParam1)
  return _internal_sparam1();
}
inline void NWNXGetIntRequest::set_sparam1(const std::string& value) {
  _internal_set_sparam1(value);
  // @@protoc_insertion_point(field_set:NWNX4.HookHorror.Proto.NWScript.NWNXGetIntRequest.sParam1)
}
inline std::string* NWNXGetIntRequest::mutable_sparam1() {
  // @@protoc_insertion_point(field_mutable:NWNX4.HookHorror.Proto.NWScript.NWNXGetIntRequest.sParam1)
  return _internal_mutable_sparam1();
}
inline const std::string& NWNXGetIntRequest::_internal_sparam1() const {
  return sparam1_.Get();
}
inline void NWNXGetIntRequest::_internal_set_sparam1(const std::string& value) {
  
  sparam1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void NWNXGetIntRequest::set_sparam1(std::string&& value) {
  
  sparam1_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:NWNX4.HookHorror.Proto.NWScript.NWNXGetIntRequest.sParam1)
}
inline void NWNXGetIntRequest::set_sparam1(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  sparam1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:NWNX4.HookHorror.Proto.NWScript.NWNXGetIntRequest.sParam1)
}
inline void NWNXGetIntRequest::set_sparam1(const char* value,
    size_t size) {
  
  sparam1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:NWNX4.HookHorror.Proto.NWScript.NWNXGetIntRequest.sParam1)
}
inline std::string* NWNXGetIntRequest::_internal_mutable_sparam1() {
  
  return sparam1_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* NWNXGetIntRequest::release_sparam1() {
  // @@protoc_insertion_point(field_release:NWNX4.HookHorror.Proto.NWScript.NWNXGetIntRequest.sParam1)
  return sparam1_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void NWNXGetIntRequest::set_allocated_sparam1(std::string* sparam1) {
  if (sparam1 != nullptr) {
    
  } else {
    
  }
  sparam1_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), sparam1,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:NWNX4.HookHorror.Proto.NWScript.NWNXGetIntRequest.sParam1)
}

// int32 nParam2 = 3;
inline void NWNXGetIntRequest::clear_nparam2() {
  nparam2_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 NWNXGetIntRequest::_internal_nparam2() const {
  return nparam2_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 NWNXGetIntRequest::nparam2() const {
  // @@protoc_insertion_point(field_get:NWNX4.HookHorror.Proto.NWScript.NWNXGetIntRequest.nParam2)
  return _internal_nparam2();
}
inline void NWNXGetIntRequest::_internal_set_nparam2(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  nparam2_ = value;
}
inline void NWNXGetIntRequest::set_nparam2(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_nparam2(value);
  // @@protoc_insertion_point(field_set:NWNX4.HookHorror.Proto.NWScript.NWNXGetIntRequest.nParam2)
}

// -------------------------------------------------------------------

// NWNXSetIntRequest

// string sFunction = 1;
inline void NWNXSetIntRequest::clear_sfunction() {
  sfunction_.ClearToEmpty();
}
inline const std::string& NWNXSetIntRequest::sfunction() const {
  // @@protoc_insertion_point(field_get:NWNX4.HookHorror.Proto.NWScript.NWNXSetIntRequest.sFunction)
  return _internal_sfunction();
}
inline void NWNXSetIntRequest::set_sfunction(const std::string& value) {
  _internal_set_sfunction(value);
  // @@protoc_insertion_point(field_set:NWNX4.HookHorror.Proto.NWScript.NWNXSetIntRequest.sFunction)
}
inline std::string* NWNXSetIntRequest::mutable_sfunction() {
  // @@protoc_insertion_point(field_mutable:NWNX4.HookHorror.Proto.NWScript.NWNXSetIntRequest.sFunction)
  return _internal_mutable_sfunction();
}
inline const std::string& NWNXSetIntRequest::_internal_sfunction() const {
  return sfunction_.Get();
}
inline void NWNXSetIntRequest::_internal_set_sfunction(const std::string& value) {
  
  sfunction_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void NWNXSetIntRequest::set_sfunction(std::string&& value) {
  
  sfunction_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:NWNX4.HookHorror.Proto.NWScript.NWNXSetIntRequest.sFunction)
}
inline void NWNXSetIntRequest::set_sfunction(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  sfunction_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:NWNX4.HookHorror.Proto.NWScript.NWNXSetIntRequest.sFunction)
}
inline void NWNXSetIntRequest::set_sfunction(const char* value,
    size_t size) {
  
  sfunction_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:NWNX4.HookHorror.Proto.NWScript.NWNXSetIntRequest.sFunction)
}
inline std::string* NWNXSetIntRequest::_internal_mutable_sfunction() {
  
  return sfunction_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* NWNXSetIntRequest::release_sfunction() {
  // @@protoc_insertion_point(field_release:NWNX4.HookHorror.Proto.NWScript.NWNXSetIntRequest.sFunction)
  return sfunction_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void NWNXSetIntRequest::set_allocated_sfunction(std::string* sfunction) {
  if (sfunction != nullptr) {
    
  } else {
    
  }
  sfunction_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), sfunction,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:NWNX4.HookHorror.Proto.NWScript.NWNXSetIntRequest.sFunction)
}

// string sParam1 = 2;
inline void NWNXSetIntRequest::clear_sparam1() {
  sparam1_.ClearToEmpty();
}
inline const std::string& NWNXSetIntRequest::sparam1() const {
  // @@protoc_insertion_point(field_get:NWNX4.HookHorror.Proto.NWScript.NWNXSetIntRequest.sParam1)
  return _internal_sparam1();
}
inline void NWNXSetIntRequest::set_sparam1(const std::string& value) {
  _internal_set_sparam1(value);
  // @@protoc_insertion_point(field_set:NWNX4.HookHorror.Proto.NWScript.NWNXSetIntRequest.sParam1)
}
inline std::string* NWNXSetIntRequest::mutable_sparam1() {
  // @@protoc_insertion_point(field_mutable:NWNX4.HookHorror.Proto.NWScript.NWNXSetIntRequest.sParam1)
  return _internal_mutable_sparam1();
}
inline const std::string& NWNXSetIntRequest::_internal_sparam1() const {
  return sparam1_.Get();
}
inline void NWNXSetIntRequest::_internal_set_sparam1(const std::string& value) {
  
  sparam1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void NWNXSetIntRequest::set_sparam1(std::string&& value) {
  
  sparam1_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:NWNX4.HookHorror.Proto.NWScript.NWNXSetIntRequest.sParam1)
}
inline void NWNXSetIntRequest::set_sparam1(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  sparam1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:NWNX4.HookHorror.Proto.NWScript.NWNXSetIntRequest.sParam1)
}
inline void NWNXSetIntRequest::set_sparam1(const char* value,
    size_t size) {
  
  sparam1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:NWNX4.HookHorror.Proto.NWScript.NWNXSetIntRequest.sParam1)
}
inline std::string* NWNXSetIntRequest::_internal_mutable_sparam1() {
  
  return sparam1_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* NWNXSetIntRequest::release_sparam1() {
  // @@protoc_insertion_point(field_release:NWNX4.HookHorror.Proto.NWScript.NWNXSetIntRequest.sParam1)
  return sparam1_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void NWNXSetIntRequest::set_allocated_sparam1(std::string* sparam1) {
  if (sparam1 != nullptr) {
    
  } else {
    
  }
  sparam1_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), sparam1,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:NWNX4.HookHorror.Proto.NWScript.NWNXSetIntRequest.sParam1)
}

// int32 nParam2 = 3;
inline void NWNXSetIntRequest::clear_nparam2() {
  nparam2_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 NWNXSetIntRequest::_internal_nparam2() const {
  return nparam2_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 NWNXSetIntRequest::nparam2() const {
  // @@protoc_insertion_point(field_get:NWNX4.HookHorror.Proto.NWScript.NWNXSetIntRequest.nParam2)
  return _internal_nparam2();
}
inline void NWNXSetIntRequest::_internal_set_nparam2(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  nparam2_ = value;
}
inline void NWNXSetIntRequest::set_nparam2(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_nparam2(value);
  // @@protoc_insertion_point(field_set:NWNX4.HookHorror.Proto.NWScript.NWNXSetIntRequest.nParam2)
}

// int32 nValue = 4;
inline void NWNXSetIntRequest::clear_nvalue() {
  nvalue_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 NWNXSetIntRequest::_internal_nvalue() const {
  return nvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 NWNXSetIntRequest::nvalue() const {
  // @@protoc_insertion_point(field_get:NWNX4.HookHorror.Proto.NWScript.NWNXSetIntRequest.nValue)
  return _internal_nvalue();
}
inline void NWNXSetIntRequest::_internal_set_nvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  nvalue_ = value;
}
inline void NWNXSetIntRequest::set_nvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_nvalue(value);
  // @@protoc_insertion_point(field_set:NWNX4.HookHorror.Proto.NWScript.NWNXSetIntRequest.nValue)
}

// -------------------------------------------------------------------

// NWNXGetFloatRequest

// string sFunction = 1;
inline void NWNXGetFloatRequest::clear_sfunction() {
  sfunction_.ClearToEmpty();
}
inline const std::string& NWNXGetFloatRequest::sfunction() const {
  // @@protoc_insertion_point(field_get:NWNX4.HookHorror.Proto.NWScript.NWNXGetFloatRequest.sFunction)
  return _internal_sfunction();
}
inline void NWNXGetFloatRequest::set_sfunction(const std::string& value) {
  _internal_set_sfunction(value);
  // @@protoc_insertion_point(field_set:NWNX4.HookHorror.Proto.NWScript.NWNXGetFloatRequest.sFunction)
}
inline std::string* NWNXGetFloatRequest::mutable_sfunction() {
  // @@protoc_insertion_point(field_mutable:NWNX4.HookHorror.Proto.NWScript.NWNXGetFloatRequest.sFunction)
  return _internal_mutable_sfunction();
}
inline const std::string& NWNXGetFloatRequest::_internal_sfunction() const {
  return sfunction_.Get();
}
inline void NWNXGetFloatRequest::_internal_set_sfunction(const std::string& value) {
  
  sfunction_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void NWNXGetFloatRequest::set_sfunction(std::string&& value) {
  
  sfunction_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:NWNX4.HookHorror.Proto.NWScript.NWNXGetFloatRequest.sFunction)
}
inline void NWNXGetFloatRequest::set_sfunction(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  sfunction_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:NWNX4.HookHorror.Proto.NWScript.NWNXGetFloatRequest.sFunction)
}
inline void NWNXGetFloatRequest::set_sfunction(const char* value,
    size_t size) {
  
  sfunction_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:NWNX4.HookHorror.Proto.NWScript.NWNXGetFloatRequest.sFunction)
}
inline std::string* NWNXGetFloatRequest::_internal_mutable_sfunction() {
  
  return sfunction_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* NWNXGetFloatRequest::release_sfunction() {
  // @@protoc_insertion_point(field_release:NWNX4.HookHorror.Proto.NWScript.NWNXGetFloatRequest.sFunction)
  return sfunction_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void NWNXGetFloatRequest::set_allocated_sfunction(std::string* sfunction) {
  if (sfunction != nullptr) {
    
  } else {
    
  }
  sfunction_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), sfunction,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:NWNX4.HookHorror.Proto.NWScript.NWNXGetFloatRequest.sFunction)
}

// string sParam1 = 2;
inline void NWNXGetFloatRequest::clear_sparam1() {
  sparam1_.ClearToEmpty();
}
inline const std::string& NWNXGetFloatRequest::sparam1() const {
  // @@protoc_insertion_point(field_get:NWNX4.HookHorror.Proto.NWScript.NWNXGetFloatRequest.sParam1)
  return _internal_sparam1();
}
inline void NWNXGetFloatRequest::set_sparam1(const std::string& value) {
  _internal_set_sparam1(value);
  // @@protoc_insertion_point(field_set:NWNX4.HookHorror.Proto.NWScript.NWNXGetFloatRequest.sParam1)
}
inline std::string* NWNXGetFloatRequest::mutable_sparam1() {
  // @@protoc_insertion_point(field_mutable:NWNX4.HookHorror.Proto.NWScript.NWNXGetFloatRequest.sParam1)
  return _internal_mutable_sparam1();
}
inline const std::string& NWNXGetFloatRequest::_internal_sparam1() const {
  return sparam1_.Get();
}
inline void NWNXGetFloatRequest::_internal_set_sparam1(const std::string& value) {
  
  sparam1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void NWNXGetFloatRequest::set_sparam1(std::string&& value) {
  
  sparam1_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:NWNX4.HookHorror.Proto.NWScript.NWNXGetFloatRequest.sParam1)
}
inline void NWNXGetFloatRequest::set_sparam1(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  sparam1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:NWNX4.HookHorror.Proto.NWScript.NWNXGetFloatRequest.sParam1)
}
inline void NWNXGetFloatRequest::set_sparam1(const char* value,
    size_t size) {
  
  sparam1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:NWNX4.HookHorror.Proto.NWScript.NWNXGetFloatRequest.sParam1)
}
inline std::string* NWNXGetFloatRequest::_internal_mutable_sparam1() {
  
  return sparam1_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* NWNXGetFloatRequest::release_sparam1() {
  // @@protoc_insertion_point(field_release:NWNX4.HookHorror.Proto.NWScript.NWNXGetFloatRequest.sParam1)
  return sparam1_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void NWNXGetFloatRequest::set_allocated_sparam1(std::string* sparam1) {
  if (sparam1 != nullptr) {
    
  } else {
    
  }
  sparam1_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), sparam1,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:NWNX4.HookHorror.Proto.NWScript.NWNXGetFloatRequest.sParam1)
}

// int32 nParam2 = 3;
inline void NWNXGetFloatRequest::clear_nparam2() {
  nparam2_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 NWNXGetFloatRequest::_internal_nparam2() const {
  return nparam2_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 NWNXGetFloatRequest::nparam2() const {
  // @@protoc_insertion_point(field_get:NWNX4.HookHorror.Proto.NWScript.NWNXGetFloatRequest.nParam2)
  return _internal_nparam2();
}
inline void NWNXGetFloatRequest::_internal_set_nparam2(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  nparam2_ = value;
}
inline void NWNXGetFloatRequest::set_nparam2(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_nparam2(value);
  // @@protoc_insertion_point(field_set:NWNX4.HookHorror.Proto.NWScript.NWNXGetFloatRequest.nParam2)
}

// -------------------------------------------------------------------

// NWNXSetFloatRequest

// string sFunction = 1;
inline void NWNXSetFloatRequest::clear_sfunction() {
  sfunction_.ClearToEmpty();
}
inline const std::string& NWNXSetFloatRequest::sfunction() const {
  // @@protoc_insertion_point(field_get:NWNX4.HookHorror.Proto.NWScript.NWNXSetFloatRequest.sFunction)
  return _internal_sfunction();
}
inline void NWNXSetFloatRequest::set_sfunction(const std::string& value) {
  _internal_set_sfunction(value);
  // @@protoc_insertion_point(field_set:NWNX4.HookHorror.Proto.NWScript.NWNXSetFloatRequest.sFunction)
}
inline std::string* NWNXSetFloatRequest::mutable_sfunction() {
  // @@protoc_insertion_point(field_mutable:NWNX4.HookHorror.Proto.NWScript.NWNXSetFloatRequest.sFunction)
  return _internal_mutable_sfunction();
}
inline const std::string& NWNXSetFloatRequest::_internal_sfunction() const {
  return sfunction_.Get();
}
inline void NWNXSetFloatRequest::_internal_set_sfunction(const std::string& value) {
  
  sfunction_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void NWNXSetFloatRequest::set_sfunction(std::string&& value) {
  
  sfunction_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:NWNX4.HookHorror.Proto.NWScript.NWNXSetFloatRequest.sFunction)
}
inline void NWNXSetFloatRequest::set_sfunction(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  sfunction_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:NWNX4.HookHorror.Proto.NWScript.NWNXSetFloatRequest.sFunction)
}
inline void NWNXSetFloatRequest::set_sfunction(const char* value,
    size_t size) {
  
  sfunction_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:NWNX4.HookHorror.Proto.NWScript.NWNXSetFloatRequest.sFunction)
}
inline std::string* NWNXSetFloatRequest::_internal_mutable_sfunction() {
  
  return sfunction_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* NWNXSetFloatRequest::release_sfunction() {
  // @@protoc_insertion_point(field_release:NWNX4.HookHorror.Proto.NWScript.NWNXSetFloatRequest.sFunction)
  return sfunction_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void NWNXSetFloatRequest::set_allocated_sfunction(std::string* sfunction) {
  if (sfunction != nullptr) {
    
  } else {
    
  }
  sfunction_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), sfunction,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:NWNX4.HookHorror.Proto.NWScript.NWNXSetFloatRequest.sFunction)
}

// string sParam1 = 2;
inline void NWNXSetFloatRequest::clear_sparam1() {
  sparam1_.ClearToEmpty();
}
inline const std::string& NWNXSetFloatRequest::sparam1() const {
  // @@protoc_insertion_point(field_get:NWNX4.HookHorror.Proto.NWScript.NWNXSetFloatRequest.sParam1)
  return _internal_sparam1();
}
inline void NWNXSetFloatRequest::set_sparam1(const std::string& value) {
  _internal_set_sparam1(value);
  // @@protoc_insertion_point(field_set:NWNX4.HookHorror.Proto.NWScript.NWNXSetFloatRequest.sParam1)
}
inline std::string* NWNXSetFloatRequest::mutable_sparam1() {
  // @@protoc_insertion_point(field_mutable:NWNX4.HookHorror.Proto.NWScript.NWNXSetFloatRequest.sParam1)
  return _internal_mutable_sparam1();
}
inline const std::string& NWNXSetFloatRequest::_internal_sparam1() const {
  return sparam1_.Get();
}
inline void NWNXSetFloatRequest::_internal_set_sparam1(const std::string& value) {
  
  sparam1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void NWNXSetFloatRequest::set_sparam1(std::string&& value) {
  
  sparam1_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:NWNX4.HookHorror.Proto.NWScript.NWNXSetFloatRequest.sParam1)
}
inline void NWNXSetFloatRequest::set_sparam1(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  sparam1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:NWNX4.HookHorror.Proto.NWScript.NWNXSetFloatRequest.sParam1)
}
inline void NWNXSetFloatRequest::set_sparam1(const char* value,
    size_t size) {
  
  sparam1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:NWNX4.HookHorror.Proto.NWScript.NWNXSetFloatRequest.sParam1)
}
inline std::string* NWNXSetFloatRequest::_internal_mutable_sparam1() {
  
  return sparam1_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* NWNXSetFloatRequest::release_sparam1() {
  // @@protoc_insertion_point(field_release:NWNX4.HookHorror.Proto.NWScript.NWNXSetFloatRequest.sParam1)
  return sparam1_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void NWNXSetFloatRequest::set_allocated_sparam1(std::string* sparam1) {
  if (sparam1 != nullptr) {
    
  } else {
    
  }
  sparam1_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), sparam1,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:NWNX4.HookHorror.Proto.NWScript.NWNXSetFloatRequest.sParam1)
}

// int32 nParam2 = 3;
inline void NWNXSetFloatRequest::clear_nparam2() {
  nparam2_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 NWNXSetFloatRequest::_internal_nparam2() const {
  return nparam2_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 NWNXSetFloatRequest::nparam2() const {
  // @@protoc_insertion_point(field_get:NWNX4.HookHorror.Proto.NWScript.NWNXSetFloatRequest.nParam2)
  return _internal_nparam2();
}
inline void NWNXSetFloatRequest::_internal_set_nparam2(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  nparam2_ = value;
}
inline void NWNXSetFloatRequest::set_nparam2(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_nparam2(value);
  // @@protoc_insertion_point(field_set:NWNX4.HookHorror.Proto.NWScript.NWNXSetFloatRequest.nParam2)
}

// float fValue = 4;
inline void NWNXSetFloatRequest::clear_fvalue() {
  fvalue_ = 0;
}
inline float NWNXSetFloatRequest::_internal_fvalue() const {
  return fvalue_;
}
inline float NWNXSetFloatRequest::fvalue() const {
  // @@protoc_insertion_point(field_get:NWNX4.HookHorror.Proto.NWScript.NWNXSetFloatRequest.fValue)
  return _internal_fvalue();
}
inline void NWNXSetFloatRequest::_internal_set_fvalue(float value) {
  
  fvalue_ = value;
}
inline void NWNXSetFloatRequest::set_fvalue(float value) {
  _internal_set_fvalue(value);
  // @@protoc_insertion_point(field_set:NWNX4.HookHorror.Proto.NWScript.NWNXSetFloatRequest.fValue)
}

// -------------------------------------------------------------------

// NWNXGetStringRequest

// string sFunction = 1;
inline void NWNXGetStringRequest::clear_sfunction() {
  sfunction_.ClearToEmpty();
}
inline const std::string& NWNXGetStringRequest::sfunction() const {
  // @@protoc_insertion_point(field_get:NWNX4.HookHorror.Proto.NWScript.NWNXGetStringRequest.sFunction)
  return _internal_sfunction();
}
inline void NWNXGetStringRequest::set_sfunction(const std::string& value) {
  _internal_set_sfunction(value);
  // @@protoc_insertion_point(field_set:NWNX4.HookHorror.Proto.NWScript.NWNXGetStringRequest.sFunction)
}
inline std::string* NWNXGetStringRequest::mutable_sfunction() {
  // @@protoc_insertion_point(field_mutable:NWNX4.HookHorror.Proto.NWScript.NWNXGetStringRequest.sFunction)
  return _internal_mutable_sfunction();
}
inline const std::string& NWNXGetStringRequest::_internal_sfunction() const {
  return sfunction_.Get();
}
inline void NWNXGetStringRequest::_internal_set_sfunction(const std::string& value) {
  
  sfunction_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void NWNXGetStringRequest::set_sfunction(std::string&& value) {
  
  sfunction_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:NWNX4.HookHorror.Proto.NWScript.NWNXGetStringRequest.sFunction)
}
inline void NWNXGetStringRequest::set_sfunction(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  sfunction_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:NWNX4.HookHorror.Proto.NWScript.NWNXGetStringRequest.sFunction)
}
inline void NWNXGetStringRequest::set_sfunction(const char* value,
    size_t size) {
  
  sfunction_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:NWNX4.HookHorror.Proto.NWScript.NWNXGetStringRequest.sFunction)
}
inline std::string* NWNXGetStringRequest::_internal_mutable_sfunction() {
  
  return sfunction_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* NWNXGetStringRequest::release_sfunction() {
  // @@protoc_insertion_point(field_release:NWNX4.HookHorror.Proto.NWScript.NWNXGetStringRequest.sFunction)
  return sfunction_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void NWNXGetStringRequest::set_allocated_sfunction(std::string* sfunction) {
  if (sfunction != nullptr) {
    
  } else {
    
  }
  sfunction_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), sfunction,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:NWNX4.HookHorror.Proto.NWScript.NWNXGetStringRequest.sFunction)
}

// string sParam1 = 2;
inline void NWNXGetStringRequest::clear_sparam1() {
  sparam1_.ClearToEmpty();
}
inline const std::string& NWNXGetStringRequest::sparam1() const {
  // @@protoc_insertion_point(field_get:NWNX4.HookHorror.Proto.NWScript.NWNXGetStringRequest.sParam1)
  return _internal_sparam1();
}
inline void NWNXGetStringRequest::set_sparam1(const std::string& value) {
  _internal_set_sparam1(value);
  // @@protoc_insertion_point(field_set:NWNX4.HookHorror.Proto.NWScript.NWNXGetStringRequest.sParam1)
}
inline std::string* NWNXGetStringRequest::mutable_sparam1() {
  // @@protoc_insertion_point(field_mutable:NWNX4.HookHorror.Proto.NWScript.NWNXGetStringRequest.sParam1)
  return _internal_mutable_sparam1();
}
inline const std::string& NWNXGetStringRequest::_internal_sparam1() const {
  return sparam1_.Get();
}
inline void NWNXGetStringRequest::_internal_set_sparam1(const std::string& value) {
  
  sparam1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void NWNXGetStringRequest::set_sparam1(std::string&& value) {
  
  sparam1_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:NWNX4.HookHorror.Proto.NWScript.NWNXGetStringRequest.sParam1)
}
inline void NWNXGetStringRequest::set_sparam1(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  sparam1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:NWNX4.HookHorror.Proto.NWScript.NWNXGetStringRequest.sParam1)
}
inline void NWNXGetStringRequest::set_sparam1(const char* value,
    size_t size) {
  
  sparam1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:NWNX4.HookHorror.Proto.NWScript.NWNXGetStringRequest.sParam1)
}
inline std::string* NWNXGetStringRequest::_internal_mutable_sparam1() {
  
  return sparam1_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* NWNXGetStringRequest::release_sparam1() {
  // @@protoc_insertion_point(field_release:NWNX4.HookHorror.Proto.NWScript.NWNXGetStringRequest.sParam1)
  return sparam1_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void NWNXGetStringRequest::set_allocated_sparam1(std::string* sparam1) {
  if (sparam1 != nullptr) {
    
  } else {
    
  }
  sparam1_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), sparam1,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:NWNX4.HookHorror.Proto.NWScript.NWNXGetStringRequest.sParam1)
}

// int32 nParam2 = 3;
inline void NWNXGetStringRequest::clear_nparam2() {
  nparam2_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 NWNXGetStringRequest::_internal_nparam2() const {
  return nparam2_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 NWNXGetStringRequest::nparam2() const {
  // @@protoc_insertion_point(field_get:NWNX4.HookHorror.Proto.NWScript.NWNXGetStringRequest.nParam2)
  return _internal_nparam2();
}
inline void NWNXGetStringRequest::_internal_set_nparam2(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  nparam2_ = value;
}
inline void NWNXGetStringRequest::set_nparam2(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_nparam2(value);
  // @@protoc_insertion_point(field_set:NWNX4.HookHorror.Proto.NWScript.NWNXGetStringRequest.nParam2)
}

// -------------------------------------------------------------------

// NWNXSetStringRequest

// string sFunction = 1;
inline void NWNXSetStringRequest::clear_sfunction() {
  sfunction_.ClearToEmpty();
}
inline const std::string& NWNXSetStringRequest::sfunction() const {
  // @@protoc_insertion_point(field_get:NWNX4.HookHorror.Proto.NWScript.NWNXSetStringRequest.sFunction)
  return _internal_sfunction();
}
inline void NWNXSetStringRequest::set_sfunction(const std::string& value) {
  _internal_set_sfunction(value);
  // @@protoc_insertion_point(field_set:NWNX4.HookHorror.Proto.NWScript.NWNXSetStringRequest.sFunction)
}
inline std::string* NWNXSetStringRequest::mutable_sfunction() {
  // @@protoc_insertion_point(field_mutable:NWNX4.HookHorror.Proto.NWScript.NWNXSetStringRequest.sFunction)
  return _internal_mutable_sfunction();
}
inline const std::string& NWNXSetStringRequest::_internal_sfunction() const {
  return sfunction_.Get();
}
inline void NWNXSetStringRequest::_internal_set_sfunction(const std::string& value) {
  
  sfunction_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void NWNXSetStringRequest::set_sfunction(std::string&& value) {
  
  sfunction_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:NWNX4.HookHorror.Proto.NWScript.NWNXSetStringRequest.sFunction)
}
inline void NWNXSetStringRequest::set_sfunction(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  sfunction_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:NWNX4.HookHorror.Proto.NWScript.NWNXSetStringRequest.sFunction)
}
inline void NWNXSetStringRequest::set_sfunction(const char* value,
    size_t size) {
  
  sfunction_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:NWNX4.HookHorror.Proto.NWScript.NWNXSetStringRequest.sFunction)
}
inline std::string* NWNXSetStringRequest::_internal_mutable_sfunction() {
  
  return sfunction_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* NWNXSetStringRequest::release_sfunction() {
  // @@protoc_insertion_point(field_release:NWNX4.HookHorror.Proto.NWScript.NWNXSetStringRequest.sFunction)
  return sfunction_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void NWNXSetStringRequest::set_allocated_sfunction(std::string* sfunction) {
  if (sfunction != nullptr) {
    
  } else {
    
  }
  sfunction_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), sfunction,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:NWNX4.HookHorror.Proto.NWScript.NWNXSetStringRequest.sFunction)
}

// string sParam1 = 2;
inline void NWNXSetStringRequest::clear_sparam1() {
  sparam1_.ClearToEmpty();
}
inline const std::string& NWNXSetStringRequest::sparam1() const {
  // @@protoc_insertion_point(field_get:NWNX4.HookHorror.Proto.NWScript.NWNXSetStringRequest.sParam1)
  return _internal_sparam1();
}
inline void NWNXSetStringRequest::set_sparam1(const std::string& value) {
  _internal_set_sparam1(value);
  // @@protoc_insertion_point(field_set:NWNX4.HookHorror.Proto.NWScript.NWNXSetStringRequest.sParam1)
}
inline std::string* NWNXSetStringRequest::mutable_sparam1() {
  // @@protoc_insertion_point(field_mutable:NWNX4.HookHorror.Proto.NWScript.NWNXSetStringRequest.sParam1)
  return _internal_mutable_sparam1();
}
inline const std::string& NWNXSetStringRequest::_internal_sparam1() const {
  return sparam1_.Get();
}
inline void NWNXSetStringRequest::_internal_set_sparam1(const std::string& value) {
  
  sparam1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void NWNXSetStringRequest::set_sparam1(std::string&& value) {
  
  sparam1_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:NWNX4.HookHorror.Proto.NWScript.NWNXSetStringRequest.sParam1)
}
inline void NWNXSetStringRequest::set_sparam1(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  sparam1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:NWNX4.HookHorror.Proto.NWScript.NWNXSetStringRequest.sParam1)
}
inline void NWNXSetStringRequest::set_sparam1(const char* value,
    size_t size) {
  
  sparam1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:NWNX4.HookHorror.Proto.NWScript.NWNXSetStringRequest.sParam1)
}
inline std::string* NWNXSetStringRequest::_internal_mutable_sparam1() {
  
  return sparam1_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* NWNXSetStringRequest::release_sparam1() {
  // @@protoc_insertion_point(field_release:NWNX4.HookHorror.Proto.NWScript.NWNXSetStringRequest.sParam1)
  return sparam1_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void NWNXSetStringRequest::set_allocated_sparam1(std::string* sparam1) {
  if (sparam1 != nullptr) {
    
  } else {
    
  }
  sparam1_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), sparam1,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:NWNX4.HookHorror.Proto.NWScript.NWNXSetStringRequest.sParam1)
}

// int32 nParam2 = 3;
inline void NWNXSetStringRequest::clear_nparam2() {
  nparam2_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 NWNXSetStringRequest::_internal_nparam2() const {
  return nparam2_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 NWNXSetStringRequest::nparam2() const {
  // @@protoc_insertion_point(field_get:NWNX4.HookHorror.Proto.NWScript.NWNXSetStringRequest.nParam2)
  return _internal_nparam2();
}
inline void NWNXSetStringRequest::_internal_set_nparam2(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  nparam2_ = value;
}
inline void NWNXSetStringRequest::set_nparam2(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_nparam2(value);
  // @@protoc_insertion_point(field_set:NWNX4.HookHorror.Proto.NWScript.NWNXSetStringRequest.nParam2)
}

// string sValue = 4;
inline void NWNXSetStringRequest::clear_svalue() {
  svalue_.ClearToEmpty();
}
inline const std::string& NWNXSetStringRequest::svalue() const {
  // @@protoc_insertion_point(field_get:NWNX4.HookHorror.Proto.NWScript.NWNXSetStringRequest.sValue)
  return _internal_svalue();
}
inline void NWNXSetStringRequest::set_svalue(const std::string& value) {
  _internal_set_svalue(value);
  // @@protoc_insertion_point(field_set:NWNX4.HookHorror.Proto.NWScript.NWNXSetStringRequest.sValue)
}
inline std::string* NWNXSetStringRequest::mutable_svalue() {
  // @@protoc_insertion_point(field_mutable:NWNX4.HookHorror.Proto.NWScript.NWNXSetStringRequest.sValue)
  return _internal_mutable_svalue();
}
inline const std::string& NWNXSetStringRequest::_internal_svalue() const {
  return svalue_.Get();
}
inline void NWNXSetStringRequest::_internal_set_svalue(const std::string& value) {
  
  svalue_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void NWNXSetStringRequest::set_svalue(std::string&& value) {
  
  svalue_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:NWNX4.HookHorror.Proto.NWScript.NWNXSetStringRequest.sValue)
}
inline void NWNXSetStringRequest::set_svalue(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  svalue_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:NWNX4.HookHorror.Proto.NWScript.NWNXSetStringRequest.sValue)
}
inline void NWNXSetStringRequest::set_svalue(const char* value,
    size_t size) {
  
  svalue_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:NWNX4.HookHorror.Proto.NWScript.NWNXSetStringRequest.sValue)
}
inline std::string* NWNXSetStringRequest::_internal_mutable_svalue() {
  
  return svalue_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* NWNXSetStringRequest::release_svalue() {
  // @@protoc_insertion_point(field_release:NWNX4.HookHorror.Proto.NWScript.NWNXSetStringRequest.sValue)
  return svalue_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void NWNXSetStringRequest::set_allocated_svalue(std::string* svalue) {
  if (svalue != nullptr) {
    
  } else {
    
  }
  svalue_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), svalue,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:NWNX4.HookHorror.Proto.NWScript.NWNXSetStringRequest.sValue)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace NWScript
}  // namespace Proto
}  // namespace HookHorror
}  // namespace NWNX4

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_NWScript_2fnwnx_2eproto
